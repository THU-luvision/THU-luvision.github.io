---
layout:     post
title:      "UML学习归纳整理"
date:       2016-11-27 00:00:00
author:     "wblearn"
header-img: "img/post-bg-2015.jpg"
tags:
    - UML
    - 
    - 
---

<div data-note-content class="show-content">
          <h1>写在前面</h1>
<p>之前在学校比较系统的学习过统一建模语言UML，但长时间没使用遗忘了许多，最近因工作需要，所以对UML重新学习和梳理一下。UML可帮助我们做软件需求分析和软件设计的工作，会让你的需求分析或者软件设计工作更上一层楼。</p>
<h1>UML的分类</h1>
<p>主要分为两类：结构型的UML和行为型的UML</p>
<div class="image-package">
<img src="http://upload-images.jianshu.io/upload_images/2556999-174944f9926ce5e0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" data-original-src="http://upload-images.jianshu.io/upload_images/2556999-174944f9926ce5e0.png?imageMogr2/auto-orient/strip%7CimageView2/2"><br><div class="image-caption">仅作参考，不同应用环境可能略有不同</div>
</div>
<p>其中基本不使用和很少会使用的我们不必深究，主要看实际应用较多的其他几种。</p>
<h1>静态视图</h1>
<p>1、  类元<br>类元是模型中的离散概念，拥有身份、状态、行为和关系。有几种类元包括类、接口和数据类型。其他几种类元是行为概念、环境事物、执行结构的具体化。这些类元中包括用例、参与者、构件、节点和子系统。图列出了几种类元和它们的功能。元模型术语类元中包括了所有这些概念。<br></p><div class="image-package">
<img src="http://upload-images.jianshu.io/upload_images/2556999-584949d9b04afc2f.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" data-original-src="http://upload-images.jianshu.io/upload_images/2556999-584949d9b04afc2f.jpg?imageMogr2/auto-orient/strip%7CimageView2/2"><br><div class="image-caption"></div>
</div><p><br>2、类元之间关系<br>类元之间的关系有关联、泛化、各种形式的依赖关系，包括实现关系和使用关系。<br>关联：对象通常要和其他对象发生关联，关联可以具有多层形式。多重性问题（一对一、一对多）。在UML中关联用一条直线来表示。<br>泛化：一个类继承了其他类的属性和操作。在UML中泛化用“从之类画一条带空心三角形箭头的连线指向父类”来表示。<br>依赖：一个类使用了另一个类。在UML中依赖用“从依赖类到被依赖的带箭头的虚线”表示。<br>聚集是关联的一种，聚集对象由部分对象组成。也就是整体与部分关联。在UML中用“整体和部分之间用带空心菱形箭头的连线连接”来表示。<br>组合是一种特殊的聚集，在一个组合对象中，部分对象只能作为组合对象的一部分与组合对象同时存在。在UML中用“整体和部分之间用带实心菱形箭头的连线连接”来表示。<br>实现：类和接口之间的关系被称为实现。在UML中实现关系用一个带空心三角形箭头加虚线来表示，箭头指向接口。<br>关系的种类<br></p><div class="image-package">
<img src="http://upload-images.jianshu.io/upload_images/2556999-caed76275a2edd06.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" data-original-src="http://upload-images.jianshu.io/upload_images/2556999-caed76275a2edd06.jpg?imageMogr2/auto-orient/strip%7CimageView2/2"><br><div class="image-caption"></div>
</div><p><br>图举例：<br>1.关联<br></p><div class="image-package">
<img src="http://upload-images.jianshu.io/upload_images/2556999-96c135e097d2fafd.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" data-original-src="http://upload-images.jianshu.io/upload_images/2556999-96c135e097d2fafd.jpg?imageMogr2/auto-orient/strip%7CimageView2/2"><br><div class="image-caption"></div>
</div><p><br>2.依赖<br></p><div class="image-package">
<img src="http://upload-images.jianshu.io/upload_images/2556999-f76f5f0849af5aa7.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" data-original-src="http://upload-images.jianshu.io/upload_images/2556999-f76f5f0849af5aa7.jpg?imageMogr2/auto-orient/strip%7CimageView2/2"><br><div class="image-caption"></div>
</div><p><br> 3.限定关联<br></p><div class="image-package">
<img src="http://upload-images.jianshu.io/upload_images/2556999-5e11a9f8f87bf1a3.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" data-original-src="http://upload-images.jianshu.io/upload_images/2556999-5e11a9f8f87bf1a3.jpg?imageMogr2/auto-orient/strip%7CimageView2/2"><br><div class="image-caption"></div>
</div>
<ol>
<li>聚集和组成<br><div class="image-package">
<img src="http://upload-images.jianshu.io/upload_images/2556999-ff53c4e550c01b57.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" data-original-src="http://upload-images.jianshu.io/upload_images/2556999-ff53c4e550c01b57.jpg?imageMogr2/auto-orient/strip%7CimageView2/2"><br><div class="image-caption"></div>
</div>
<br>5.泛化<br><div class="image-package">
<img src="http://upload-images.jianshu.io/upload_images/2556999-ea72551c9da855c7.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" data-original-src="http://upload-images.jianshu.io/upload_images/2556999-ea72551c9da855c7.jpg?imageMogr2/auto-orient/strip%7CimageView2/2"><br><div class="image-caption"></div>
</div>
<br>6.实现关系<br><div class="image-package">
<img src="http://upload-images.jianshu.io/upload_images/2556999-b96c26be0990569f.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" data-original-src="http://upload-images.jianshu.io/upload_images/2556999-b96c26be0990569f.jpg?imageMogr2/auto-orient/strip%7CimageView2/2"><br><div class="image-caption"></div>
</div>
</li>
</ol>
<h1>结构型的UML</h1>
<h1>(1)类图</h1>
<p>请看下面这个类图：<br></p><div class="image-package">
<img src="http://upload-images.jianshu.io/upload_images/2556999-b74a9487d3825b77.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" data-original-src="http://upload-images.jianshu.io/upload_images/2556999-b74a9487d3825b77.jpg?imageMogr2/auto-orient/strip%7CimageView2/2"><br><div class="image-caption">某模具系统类图</div>
</div>
<p>此图截取自某模具管理系统的业务概念分析图，图中一个一个的矩形就是类，这些类之间有各种线条连接，这些线条表示类之间的关系。类图是分析业务概念的首选，类图可能是使用率最高的UML图。<br>再看下面这个Person类图，这时软件设计时用到的一个图：<br></p><div class="image-package">
<img src="http://upload-images.jianshu.io/upload_images/2556999-eb9e5e7d18a3d5fa.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" data-original-src="http://upload-images.jianshu.io/upload_images/2556999-eb9e5e7d18a3d5fa.jpg?imageMogr2/auto-orient/strip%7CimageView2/2"><br><div class="image-caption">Person类图</div>
</div>
<p>该Person类有以下属性(Attribute)：Name(姓名),Sex(性别),Department(部门)等，有以下操作(Operation)：Work(工作)等。类有属性和操作，但用类图分析业务模型时，往往不需要使用操作，如图1.1中的类就只有属性。<br>Attribute有特性、特征等译法，Operation也称作方法，但本书遵循UML中文术语标准，即Attribute为属性，Operation为操作。</p>
<p>关于类图的详细讲解，<a href="http://blog.csdn.net/wudalang_gd/article/details/53365240" target="_blank">请戳这里</a></p>
<h1>(2)构建图</h1>
<p>构件图也叫组件图，两个名字均符合UML中文术语标准。<br>一辆汽车由轮子、发动机等物理部件组成，一个软件往往也是由很多“物理部件”(如：控件、重用构件等)组成的，构件图就是用来描述软件内部物理组成的一种图。下图是某权限构件设计图：<br></p><div class="image-package">
<img src="http://upload-images.jianshu.io/upload_images/2556999-36d494a444cfe878.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" data-original-src="http://upload-images.jianshu.io/upload_images/2556999-36d494a444cfe878.jpg?imageMogr2/auto-orient/strip%7CimageView2/2"><br><div class="image-caption"></div>
</div><p><br>图右上方有这样标志 的矩形表示一个构件，构件可以再包含构件。<br>软件需求分析工作中，需要用到构件图的情况不是很多，以下情况除外：</p>
<ol>
<li>待开发的系统需要与第三方的系统、原有系统、某些老系统等交互，这时可用构件图描述交互要求。</li>
<li>客户对软件设计有某些特殊要求，这时可用构件图来描述要求。<br>构件图有时不会单独使用，还会和部署图一起结合使用。</li>
</ol>
<p>关于构建图的详细讲解，<a href="http://www.cnblogs.com/finehappy/archive/2009/11/24/1609352.html" target="_blank">请戳这里</a></p>
<h1>(3)部署图</h1>
<p>部署图是用来描述系统如何部署、本系统与其他系统是怎样的关系的一种图，如下图：<br></p><div class="image-package">
<img src="http://upload-images.jianshu.io/upload_images/2556999-a8fc81738615e9ab.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" data-original-src="http://upload-images.jianshu.io/upload_images/2556999-a8fc81738615e9ab.jpg?imageMogr2/auto-orient/strip%7CimageView2/2"><br><div class="image-caption">某24小时便利店的管理系统部署图</div>
</div>
<p>图中一个个立体的矩形是部署图的“节点”，一个节点表示一个物理的设备，节点之间的线条表示节点间的物理连接关系。<br>大部分客户都会具备一定的IT基础环境(如具备局域网、一些服务器、某些软件平台等)，软件系统需要基于当前的IT基础环境来规划，这时我们可以使用部署图来做这个规划。<br>分析系统的需求，不能忽略系统架构、部署、IT架构等方面的要求，我们要基于客户当前的IT基础环境，做一个最符合客户利益的规划。<br>要活用构件图、部署图来分析需求，需要具备一定的IT基础架构知识和软件设计知识，如果你还不具备相关知识，那么可以考虑抓紧补充相关知识。不过需求分析工作更多的还是分析业务，提炼功能性需求，这部分工作能做好是相当不容易的事情。对于技术方面的非功能性需求分析，可交由有技术背景的专业人士负责。</p>
<p>关于部署图的详细讲解，<a href="http://www.cnblogs.com/ywqu/archive/2009/12/21/1628545.html" target="_blank">请戳这里</a></p>
<h1>行为型的UML</h1>
<h1>(1)活动图</h1>
<p>我们将起床到出门上班这个过程画成活动图，可能是这样的：<br></p><div class="image-package">
<img src="http://upload-images.jianshu.io/upload_images/2556999-554a0b0ec1fde2ae.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" data-original-src="http://upload-images.jianshu.io/upload_images/2556999-554a0b0ec1fde2ae.jpg?imageMogr2/auto-orient/strip%7CimageView2/2"><br><div class="image-caption">起床到出门上班的活动图</div>
</div>
<p>活动图中的一个圆边框框表示一个“活动”，多个活动之间的带箭头线条表示活动的先后顺序，该图只是表达了一个顺序流程，活动图还可以表达分支结构。如果你以前曾学过流程图的话，你会发现活动图和流程图很相似。活动图可能是三种能表示流程的UML图中最接近我们思维习惯的一种，下面来学习另外两种能表达流程的图。</p>
<p>关于活动图的详细讲解，<a href="http://www.cnblogs.com/ywqu/archive/2009/12/14/1624082.html" target="_blank">请戳这里</a></p>
<h1>(2)状态图</h1>
<p>状态机图又叫状态图，但状态图这个译名并没有译出Machine的意思。<br>状态机图从某个物品的状态是如何变化的角度来展示流程，下图某请假条审批流程：<br></p><div class="image-package">
<img src="http://upload-images.jianshu.io/upload_images/2556999-2a2bb334bedffd04.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" data-original-src="http://upload-images.jianshu.io/upload_images/2556999-2a2bb334bedffd04.jpg?imageMogr2/auto-orient/strip%7CimageView2/2"><br><div class="image-caption">请假处理流程</div>
</div><p><br>整个请假审批流程是围绕“请假条”这个物体进行的，随着不同的审批阶段，请假条具备不同的状态。我们分析业务流程时会发现很多流程其实是围绕某个物品进行的，这时可考虑使用状态机图。</p>
<p>关于状态图的详细讲解，<a href="http://blog.csdn.net/heshengfen123/article/details/9361959" target="_blank">请戳这里</a></p>
<h1>(3)顺序图</h1>
<p>你去餐厅吃饭，向服务员点餐到服务员送菜上来，这个过程用顺序图可表示如下：<br></p><div class="image-package">
<img src="http://upload-images.jianshu.io/upload_images/2556999-749a9236afa8f368.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" data-original-src="http://upload-images.jianshu.io/upload_images/2556999-749a9236afa8f368.jpg?imageMogr2/auto-orient/strip%7CimageView2/2"><br><div class="image-caption">点菜的顺序图</div>
</div>
<p>该图有三个“小人”，每个“小人”下面的文字说明(如：顾客)表示其代表的角色。角色与角色之间有一些线条链接，表示角色之间是如何交互的。该图表示的意思是：顾客向服务员点菜后，服务员将点菜信息传递给厨师，然后厨师做菜，最后再由服务员送菜给你。<br>点菜过程涉及几个环节，每个环节均由不同的角色来负责，如果遇到类似的情况，你可以考虑使用顺序图来分析。用顺序图来分析的好处是能清晰表达整个过程所参与的角色，角色与角色之间的关系，各角色是如何被卷入这个过程当中的。</p>
<p>关于顺序图的详细讲解，<a href="http://www.cnblogs.com/xueyuangudiao/archive/2011/09/22/2185364.html" target="_blank">请戳这里</a></p>
<h1>(4)用例图</h1>
<p>下图是用例图的示意图：<br></p><div class="image-package">
<img src="http://upload-images.jianshu.io/upload_images/2556999-2212c105f1ee5978.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" data-original-src="http://upload-images.jianshu.io/upload_images/2556999-2212c105f1ee5978.jpg?imageMogr2/auto-orient/strip%7CimageView2/2"><br><div class="image-caption"></div>
</div><p><br>用例图表达的是什么角色通过软件系统能做什么事情，我们可以使用用例图系统地表达软件系统的绝大部分需求。</p>
<p>关于用例图的详细讲解，<a href="http://blog.csdn.net/wudalang_gd/article/details/53365211" target="_blank">请戳这里</a></p>
<h1>写在最后</h1>
<p>以上一些基本不使用或很少使用的uml图没整理出来，通过本篇，可以大概熟悉UML各种图的用途了。</p>
<p>想了解更多关于uml的，可以参考下面这些：<br><a href="http://www.cnblogs.com/SanMaoSpace/p/5102529.html" target="_blank">http://www.cnblogs.com/SanMaoSpace/p/5102529.html</a><br><a href="http://www.uml.org.cn/oobject/201309023.asp" target="_blank">http://www.uml.org.cn/oobject/201309023.asp</a></p>

        </div>